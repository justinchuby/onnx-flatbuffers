# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Dimension_

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class Anonymous0(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = Anonymous0()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsAnonymous0(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # Anonymous0
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # Anonymous0
    def DimValue(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # Anonymous0
    def DimParam(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def Anonymous0Start(builder):
    builder.StartObject(2)

def Start(builder):
    Anonymous0Start(builder)

def Anonymous0AddDimValue(builder, dimValue):
    builder.PrependInt64Slot(0, dimValue, 0)

def AddDimValue(builder, dimValue):
    Anonymous0AddDimValue(builder, dimValue)

def Anonymous0AddDimParam(builder, dimParam):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(dimParam), 0)

def AddDimParam(builder, dimParam):
    Anonymous0AddDimParam(builder, dimParam)

def Anonymous0End(builder):
    return builder.EndObject()

def End(builder):
    return Anonymous0End(builder)
